
#all libraries statically linked to indicus lib go in this variable
#  note that only here should ptlib be linked to (statically)
#    executables linking to indicus lib shouldn't themselves link directly to 'ptlib'
#    rather access 'ptlib' contents through linking to indicus lib
#
#    (the double-linked 'ptlib' logging code may execute a double free somewhere during memory cleanup
#      after the last line of the program, causing a crash right before exiting
#      VERY VERY weird issue)
set(INDICUS_ENGINE_STATIC_LINK_SETTINGS
    -lptlib
    -lmath3d
)


set(INDICUS_ENGINE_COMPILE_DEFINITIONS
#'math3d' macros (need to be same as the lib was build with)
#    MATH_ENABLE_SWIZZLE=1

#disables assertions, define this for release versions
#    NDEBUG
)


#--------------------------------------------------
# engine test project setup
#--------------------------------------------------

#all test source files go in this variable
#set(INDICUS_TEST_SOURCE_FILES
    #${MY_PROJ_ROOT}/src/engine/Main.cpp
    #${MY_PROJ_ROOT}/src/engine/test/ActorTester/ColorRectComponent.cpp
    #${MY_PROJ_ROOT}/src/engine/test/ActorTester/Game.cpp
    #${MY_PROJ_ROOT}/src/engine/test/ActorTester/PlayerPawn.cpp
    #${MY_PROJ_ROOT}/src/engine/test/SDLKeytester.cpp
    #${MY_PROJ_ROOT}/src/engine/test/ogltester01/Game.cpp
#)

#all test header files go in this variable
#set(INDICUS_TEST_HEADER_FILES
    #${MY_PROJ_ROOT}/include/engine/test/ActorTester/ColorRectComponent.h
    #${MY_PROJ_ROOT}/include/engine/test/ActorTester/Game.h
    #${MY_PROJ_ROOT}/include/engine/test/ActorTester/PlayerPawn.h
    #${MY_PROJ_ROOT}/include/engine/test/SDLKeytester.h
    #${MY_PROJ_ROOT}/include/engine/test/ogltester01/Game.h
#)

#all test include directories go in this variable
set(INDICUS_TEST_INCLUDE_DIRECTORIES
    /usr/include
    ${MY_PROJ_ROOT}/include
)

#all libraries only linked to engine testing go in this variable
#set(INDICUS_TEST_LINK_SETTINGS
#)

#--------------------------------------------------
# dynamic engine library
#--------------------------------------------------

#build shared engine library (.so / DLL)
add_library(indicus SHARED
    ${INDICUS_ENGINE_SOURCE_FILES}
    ${INDICUS_ENGINE_HEADER_FILES}
)

target_include_directories(indicus PRIVATE
    ${INDICUS_ENGINE_INCLUDE_DIRECTORIES}
)

set_target_properties(indicus PROPERTIES COMPILE_FLAGS
    "${MY_COMPILE_FLAGS} -fPIC"
)

target_link_libraries(indicus PUBLIC
    "${INDICUS_SHARED_LINK_SETTINGS}"
    "${INDICUS_ENGINE_STATIC_LINK_SETTINGS}"
)

target_compile_definitions(indicus PRIVATE
    ${INDICUS_ENGINE_COMPILE_DEFINITIONS}
)

#--------------------------------------------------
# engine test executable
#--------------------------------------------------

#(linux) sets up the executable to look for libs in the same directory during runtime
SET(CMAKE_SKIP_BUILD_RPATH  FALSE)
SET(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
SET(CMAKE_INSTALL_RPATH "$\{ORIGIN\}")

add_executable(OpenGL_test
    __ENGINE_TEST_CPP_FILES__
)

target_include_directories(OpenGL_test PRIVATE
    ${INDICUS_TEST_INCLUDE_DIRECTORIES}
    ${INDICUS_ENGINE_INCLUDE_DIRECTORIES}
)

#TODO: branch out based on debug or release build
#       and only look for libs in the appropriate folder
target_link_libraries(OpenGL_test
    ${INDICUS_SHARED_LINK_SETTINGS}
#    ${INDICUS_TEST_LINK_SETTINGS}
    -L"${MY_OUTPUT_DIR}"
    -L"${MY_OUTPUT_DIR_DEBUG}"
    -lindicus
)

target_compile_definitions(OpenGL_test PRIVATE
    ${INDICUS_ENGINE_COMPILE_DEFINITIONS}
)

add_dependencies(OpenGL_test indicus)

#--------------------------------------------------



#add_executable(indicus_test
#    ${INDICUS_TEST_SOURCE_FILES}
#    ${INDICUS_TEST_HEADER_FILES}
#)

#target_include_directories(indicus_test PRIVATE
#    ${INDICUS_TEST_INCLUDE_DIRECTORIES}
#    ${INDICUS_ENGINE_INCLUDE_DIRECTORIES}
#)

#TODO: branch out based on debug or release build
#       and only look for libs in the appropriate folder
#target_link_libraries(indicus_test
#    ${INDICUS_SHARED_LINK_SETTINGS}
##    ${INDICUS_TEST_LINK_SETTINGS}
#    -L"${MY_OUTPUT_DIR}"
#    -L"${MY_OUTPUT_DIR_DEBUG}"
#    -lindicus
#)

#target_compile_definitions(indicus_test PRIVATE
#    ${INDICUS_ENGINE_COMPILE_DEFINITIONS}
#)

#add_dependencies(indicus_test indicus)

#--------------------------------------------------
